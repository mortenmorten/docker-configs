version: "3"
services:
  duckdns:
    image: linuxserver/duckdns
    environment:
      - TZ=Europe/Oslo
      - SUBDOMAINS
      - TOKEN
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/share/Container/nginx/conf.d:/etc/nginx/conf.d"
      - "/share/Container/nginx/vhost.d:/etc/nginx/vhost.d"
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - dhparam:/etc/nginx/dhparam
    networks:
      - nginx_proxy
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/share/Container/nginx/conf.d:/etc/nginx/conf.d"
      - "/share/Container/nginx/vhost.d:/etc/nginx/vhost.d"
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - dhparam:/etc/nginx/dhparam
    environment:
      - DEFAULT_EMAIL
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any

volumes:
  certs:
  html:
  dhparam:
  
networks:
  nginx_proxy:
    external:
      name: nginx_proxy